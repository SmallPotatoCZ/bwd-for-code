<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>JavaScript on EsilyZhang 的备忘单</title>
    <link>https://bwd.zhangchao.online/categories/javascript/</link>
    <description>Recent content in JavaScript on EsilyZhang 的备忘单</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Wed, 10 Jul 2019 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://bwd.zhangchao.online/categories/javascript/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>JavaScript 基础知识</title>
      <link>https://bwd.zhangchao.online/javascript/basic/</link>
      <pubDate>Wed, 10 Jul 2019 00:00:00 +0000</pubDate>
      
      <guid>https://bwd.zhangchao.online/javascript/basic/</guid>
      <description> 基本值和类型 值有类型，但变量无类型
内置类型：
 字符串（string） 数字（number） 布尔值（boolean） null 和 undefined 对象（object） 符号（symbol）  typeof typeof &amp;#34;helloworld&amp;#34;; // string typeof 10; // number typeof true; // bollean typeof null; // object typeof a; // undefined typeof []; // object typeof Symbol(&amp;#34;a&amp;#34;); // symbol typeof function(){}; // function  内置子对象 Array </description>
    </item>
    
    <item>
      <title>ES2015&#43;</title>
      <link>https://bwd.zhangchao.online/javascript/es6/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://bwd.zhangchao.online/javascript/es6/</guid>
      <description>语法 块作用域声明 let var a = 2; { let a = 3; console.log(&amp;#34;块作用域&amp;#34;, a); } console.log(&amp;#34;函数作用域&amp;#34;, a);  const { const a = 2; console.log(a); // 2  a = 3; // TypeError } // 常量不是对这个值本身的限制，而是对赋值的哪个变量的限制 { const a = [1, 2, 3]; a.push(4); console.log(a); // [1, 2, 3, 4]  a = 42; // TypeError }  块作用域函数 { foo(); function foo(){} } foo(); // ReferenceError  spread/rest spread function foo(a, b, c){ console.</description>
    </item>
    
  </channel>
</rss>